from OM_Insure.Utilities.Mapping import *
from GlobalConfig.GlobalConfigFile import *

"""Balances File"""
def getBalancesHeader():
    headerLine = 'LEDGER_NAME,KEY,LEDGER_ID,CODE_COMBINATION_ID,CURRENCY_CODE,PERIOD_NAME,ACTUAL_FLAG,LAST_UPDATE_DATE,LAST_UPDATED_BY,BUDGET_VERSION_ID,ENCUMBRANCE_TYPE_ID,TRANSLATED_FLAG,REVALUATION_STATUS,PERIOD_TYPE,PERIOD_YEAR,PERIOD_NUM,PERIOD_NET_DR,PERIOD_NET_CR,PERIOD_TO_DATE_ADB,QUARTER_TO_DATE_DR,QUARTER_TO_DATE_CR,QUARTER_TO_DATE_ADB,YEAR_TO_DATE_ADB,PROJECT_TO_DATE_DR,PROJECT_TO_DATE_CR,PROJECT_TO_DATE_ADB,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,PERIOD_NET_DR_BEQ,PERIOD_NET_CR_BEQ,QUARTER_TO_DATE_DR_BEQ,QUARTER_TO_DATE_CR_BEQ,PROJECT_TO_DATE_DR_BEQ,PROJECT_TO_DATE_CR_BEQ,BEGIN_BALANCE_DR_BEQ,BEGIN_BALANCE_CR_BEQ,TEMPLATE_ID,ENCUMBRANCE_DOC_ID,ENCUMBRANCE_LINE_NUM,OBJECT_VERSION_NUMBER,PARTITION_GROUP_CODE'
    return headerLine

"""Code Combinations File"""

def getCodeCombinationsHeader():
    headerLine = 'CODE_COMBINATION_ID,LAST_UPDATE_DATE,LAST_UPDATED_BY,CHART_OF_ACCOUNTS_ID,DETAIL_POSTING_ALLOWED_FLAG,DETAIL_BUDGETING_ALLOWED_FLAG,ACCOUNT_TYPE,ENABLED_FLAG,SUMMARY_FLAG,SEGMENT1,SEGMENT2,SEGMENT3,SEGMENT4,SEGMENT5,SEGMENT6,SEGMENT7,SEGMENT8,SEGMENT9,SEGMENT10,SEGMENT11,SEGMENT12,SEGMENT13,SEGMENT14,SEGMENT15,SEGMENT16,SEGMENT17,SEGMENT18,SEGMENT19,SEGMENT20,SEGMENT21,SEGMENT22,SEGMENT23,SEGMENT24,SEGMENT25,SEGMENT26,SEGMENT27,SEGMENT28,SEGMENT29,SEGMENT30,DESCRIPTION,TEMPLATE_ID,ALLOCATION_CREATE_FLAG,START_DATE_ACTIVE,END_DATE_ACTIVE,ATTRIBUTE1,ATTRIBUTE2,ATTRIBUTE3,ATTRIBUTE4,ATTRIBUTE5,ATTRIBUTE6,ATTRIBUTE7,ATTRIBUTE8,ATTRIBUTE9,ATTRIBUTE10,ATTRIBUTE_DATE1,ATTRIBUTE_DATE2,ATTRIBUTE_DATE3,ATTRIBUTE_DATE4,ATTRIBUTE_DATE5,ATTRIBUTE_NUMBER1,ATTRIBUTE_NUMBER2,ATTRIBUTE_NUMBER3,ATTRIBUTE_NUMBER4,ATTRIBUTE_NUMBER5,ATTRIBUTE_CATEGORY,SEGMENT_ATTRIBUTE1,SEGMENT_ATTRIBUTE2,SEGMENT_ATTRIBUTE3,SEGMENT_ATTRIBUTE4,SEGMENT_ATTRIBUTE5,SEGMENT_ATTRIBUTE6,SEGMENT_ATTRIBUTE7,SEGMENT_ATTRIBUTE8,SEGMENT_ATTRIBUTE9,SEGMENT_ATTRIBUTE10,SEGMENT_ATTRIBUTE11,SEGMENT_ATTRIBUTE12,SEGMENT_ATTRIBUTE13,SEGMENT_ATTRIBUTE14,SEGMENT_ATTRIBUTE15,SEGMENT_ATTRIBUTE16,SEGMENT_ATTRIBUTE17,SEGMENT_ATTRIBUTE18,SEGMENT_ATTRIBUTE19,SEGMENT_ATTRIBUTE20,SEGMENT_ATTRIBUTE21,SEGMENT_ATTRIBUTE22,SEGMENT_ATTRIBUTE23,SEGMENT_ATTRIBUTE24,SEGMENT_ATTRIBUTE25,SEGMENT_ATTRIBUTE26,SEGMENT_ATTRIBUTE27,SEGMENT_ATTRIBUTE28,SEGMENT_ATTRIBUTE29,SEGMENT_ATTRIBUTE30,SEGMENT_ATTRIBUTE31,SEGMENT_ATTRIBUTE32,SEGMENT_ATTRIBUTE33,SEGMENT_ATTRIBUTE34,SEGMENT_ATTRIBUTE35,SEGMENT_ATTRIBUTE36,SEGMENT_ATTRIBUTE37,SEGMENT_ATTRIBUTE38,SEGMENT_ATTRIBUTE39,SEGMENT_ATTRIBUTE40,SEGMENT_ATTRIBUTE41,SEGMENT_ATTRIBUTE42,JGZZ_RECON_FLAG,JGZZ_RECON_CONTEXT,REFERENCE1,REFERENCE2,REFERENCE3,REFERENCE4,REFERENCE5,PRESERVE_FLAG,REFRESH_FLAG,IGI_BALANCED_BUDGET_FLAG,COMPANY_COST_CENTER_ORG_ID,REVALUATION_ID,LEDGER_SEGMENT,LEDGER_TYPE_CODE,ALTERNATE_CODE_COMBINATION_ID,FINANCIAL_CATEGORY,OBJECT_VERSION_NUMBER,CREATION_DATE,CREATED_BY,LAST_UPDATE_LOGIN,DISABLED_BY_FEATURE_CODE,CVC_END_DATE'
    return headerLine

"""GL Code Descriptions File"""

def getGLCodeDescriptionsHeader():
    headerLine = 'SEGMENT,CODE,DESCRIPTION,CHART_OF_ACCOUNTS_ID,KEY'
    return headerLine

def getGLCodeDescriptionList():
    content = ''
    return content

def contentBalanceSheetPostingType(Entity):

    CompanyID = Entity
    CompanyName = getCompanyName(Entity)
    YEAR1 = '2021'
    PERIODID = '2'
    Company_Segment = getCompanySegment(Entity)
    BOUTIQUE = getBSBOUTIQUE(Entity)
    MAIN_ACCOUNT = getBSMainAccount(Entity)
    RELATED_PARTY = getRelatedParty(MAIN_ACCOUNT)
    RPCLUSTER = getRPCLUSTER(MAIN_ACCOUNT)
    ACCOUNT_DESCRIPTION = getAccountDescription(MAIN_ACCOUNT)
    POSTING_TYPE = 'Balance Sheet'
    OPENING_BALANCE = getValue1()
    MTD_DEBITAMT = getValue2()
    MTD_CREDITAMT = getValue3()
    MTD_MOVEMENT = round(MTD_DEBITAMT - MTD_CREDITAMT,2)
    YTD_BALANCE = round(OPENING_BALANCE - MTD_CREDITAMT,2)

    BSLine = CompanyID + '\t' + CompanyName + '\t' + YEAR1 + '\t' + PERIODID + '\t' +Company_Segment + '\t' + BOUTIQUE + '\t' + MAIN_ACCOUNT + '\t' + RELATED_PARTY + '\t' + RPCLUSTER + '\t' + ACCOUNT_DESCRIPTION + '\t' + POSTING_TYPE + '\t' + str(OPENING_BALANCE) + '\t' + str(MTD_DEBITAMT) + '\t' + str(MTD_CREDITAMT) + '\t' + str(MTD_MOVEMENT) + '\t' + str(YTD_BALANCE) + '\n'
    return BSLine

def contentProfitAndLossPostingType(Entity):

    CompanyID = Entity
    CompanyName = getCompanyName(Entity)
    YEAR1 = '2021'
    PERIODID = '2'
    Company_Segment = getCompanySegment(Entity)
    BOUTIQUE = getPALBOUTIQUE(Entity)
    MAIN_ACCOUNT = getPALMainAccount(Entity)
    RELATED_PARTY = getRelatedParty(MAIN_ACCOUNT)
    RPCLUSTER = getRPCLUSTER(MAIN_ACCOUNT)
    ACCOUNT_DESCRIPTION = getAccountDescription(MAIN_ACCOUNT)
    POSTING_TYPE = 'Profit and Loss'
    OPENING_BALANCE = '0.00'
    MTD_DEBITAMT = getValue4()
    MTD_CREDITAMT = getValue5()
    MTD_MOVEMENT = round(MTD_DEBITAMT - MTD_CREDITAMT,2)
    YTD_BALANCE = round(MTD_CREDITAMT,2)

    PALLine = CompanyID + '\t' + CompanyName + '\t' + YEAR1 + '\t' + PERIODID + '\t' + Company_Segment + '\t' + BOUTIQUE + '\t' + MAIN_ACCOUNT + '\t' + RELATED_PARTY + '\t' + RPCLUSTER + '\t' + ACCOUNT_DESCRIPTION + '\t' + POSTING_TYPE + '\t' + str(OPENING_BALANCE) + '\t' + str(MTD_DEBITAMT) + '\t' + str(MTD_CREDITAMT) + '\t' + str(MTD_MOVEMENT) + '\t' + str(YTD_BALANCE)
    return PALLine

"""Control File"""

def getControlFileHeader():
    headerLine = 'SOURCE_FILE_NAME'+','+'ROW_COUNT'+','+'TOTAL_DR'+','+'TOTAL_CR'+'\n'
    return headerLine











